{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "REST API",
    "description": ""
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/create": {
      "post": {
        "tags": [
          "Talk"
        ],
        "description": "Endpoint to create a new talk.",
        "parameters": [
          {
            "name": "newTalk",
            "in": "body",
            "description": "Information for the new talk.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Talk"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "delete": {
        "tags": [
          "Talk"
        ],
        "description": "Endpoint to delete a talk.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Talk ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "tags": [
          "Talk"
        ],
        "description": "Endpoint to get a specific talk.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Talk ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": [
          "Talk"
        ],
        "description": "Endpoint to update a specific talk.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Talk ID."
          },
          {
            "name": "updatedTalk",
            "in": "body",
            "description": "Information for the updated talk.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Talk"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/": {
      "get": {
        "tags": [
          "Talk"
        ],
        "description": "Endpoint to get all talks.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/talk/{talk_id}": {
      "get": {
        "tags": [
          "TalkAttendee"
        ],
        "description": "Endpoint to get attendees for a specific talk.",
        "parameters": [
          {
            "name": "talk_id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Talk ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/room/{id}": {
      "get": {
        "tags": [
          "Room"
        ],
        "description": "Endpoint to get a specific room.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "integer",
            "description": "Room ID."
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Unauthorized"
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to register a new user.",
        "parameters": [
          {
            "name": "newUser",
            "in": "body",
            "description": "Information for the new user.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to login a user.",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User login details.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserLogin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/users": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get a list of users.",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/register-admin": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "Endpoint to register a new admin.",
        "parameters": [
          {
            "name": "newAdmin",
            "in": "body",
            "description": "Information for the new admin.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Admin"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}